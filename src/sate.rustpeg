use super::{Call, Command, Directive, Tag, TargetHeader};

ws = " "+
eol = [\n\r]+
alpha = [a-zA-Z]
digit = [0-9]

pub ident -> String = ident:$(alpha (alpha / digit)*) {
    ident.to_string()
}

pub arg_list -> Vec<String> = ident ** ws

pub call -> Call = name:ident "(" args:arg_list ")" {
    Call::new(name, args)
}

directive -> Directive = calls:(call ++ ws) {
    Directive(calls)
}

target_header_simple -> TargetHeader = name:ident {
    TargetHeader { name, calls: vec![] }
}

target_header_with_calls -> TargetHeader =
    name:ident ws calls:(call ** ws) {
        TargetHeader { name, calls }
}

tag_target_header -> Tag =
    "[" t:(target_header_with_calls / target_header_simple) "]" {
        Tag::Target(t)
}

tag_directive -> Tag = "[" d:(directive) "]" {
    Tag::Directive(d)
}

pub tag -> Tag = tag_directive / tag_target_header

pub command -> Command = directive:directive? code:$(.+) eol {
    Command::new(directive, code)
}

// pub target = tag_target_header nl command+

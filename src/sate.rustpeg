use super::{Call, Tag};

ws = " "+
alpha = [a-zA-Z]
digit = [0-9]

pub ident -> String = ident:$(alpha (alpha / digit)*) {
    ident.to_string()
}

pub arg_list -> Vec<String> = ident ** ws

pub call -> Call = name:ident "(" args:arg_list ")" {
    Call::new(name, args)
}

pub directive -> Tag = calls:(call ++ ws) {
    Tag::directive(calls)
}

pub target_simple -> Tag = name:ident {
    Tag::target(name, vec![])
}

pub target_with_calls -> Tag = name:ident ws calls:(call ** ws) {
    Tag::target(name, calls)
}

pub tag_target -> Tag = "[" t:(target_with_calls / target_simple) "]" {
    t
}

pub tag_directive -> Tag = "[" d:(directive) "]" {
    d
}

pub tag -> Tag = tag_directive / tag_target
